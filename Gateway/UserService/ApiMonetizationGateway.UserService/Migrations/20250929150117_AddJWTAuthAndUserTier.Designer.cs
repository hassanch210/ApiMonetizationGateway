// <auto-generated />
using System;
using ApiMonetizationGateway.Shared.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiMonetizationGateway.UserService.Migrations
{
    [DbContext(typeof(ApiMonetizationContext))]
    [Migration("20250929150117_AddJWTAuthAndUserTier")]
    partial class AddJWTAuthAndUserTier
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.ApiUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResponseStatusCode")
                        .HasColumnType("int");

                    b.Property<long>("ResponseTimeMs")
                        .HasColumnType("bigint");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestTimestamp");

                    b.HasIndex("UserId", "RequestTimestamp");

                    b.ToTable("ApiUsages");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.MonthlyUsageSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CalculatedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EndpointUsageJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FailedRequests")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsBilled")
                        .HasColumnType("bit");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("SuccessfulRequests")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TierPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("TotalRequests")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Year", "Month")
                        .IsUnique();

                    b.ToTable("MonthlyUsageSummaries");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.Tier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MonthlyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("MonthlyQuota")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RateLimit")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tiers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 29, 15, 1, 15, 409, DateTimeKind.Utc).AddTicks(9826),
                            Description = "Free tier with basic limits",
                            IsActive = true,
                            MonthlyPrice = 0m,
                            MonthlyQuota = 100L,
                            Name = "Free",
                            RateLimit = 2,
                            UpdatedAt = new DateTime(2025, 9, 29, 15, 1, 15, 409, DateTimeKind.Utc).AddTicks(9826)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 29, 15, 1, 15, 409, DateTimeKind.Utc).AddTicks(9831),
                            Description = "Professional tier with higher limits",
                            IsActive = true,
                            MonthlyPrice = 50m,
                            MonthlyQuota = 100000L,
                            Name = "Pro",
                            RateLimit = 10,
                            UpdatedAt = new DateTime(2025, 9, 29, 15, 1, 15, 409, DateTimeKind.Utc).AddTicks(9832)
                        });
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApiKey")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TierId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.UserTier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TierId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TierId");

                    b.HasIndex("UserId", "TierId", "IsActive");

                    b.ToTable("UserTiers");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.ApiUsage", b =>
                {
                    b.HasOne("ApiMonetizationGateway.Shared.Models.User", "User")
                        .WithMany("ApiUsages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.MonthlyUsageSummary", b =>
                {
                    b.HasOne("ApiMonetizationGateway.Shared.Models.User", "User")
                        .WithMany("MonthlyUsageSummaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.User", b =>
                {
                    b.HasOne("ApiMonetizationGateway.Shared.Models.Tier", "Tier")
                        .WithMany("Users")
                        .HasForeignKey("TierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tier");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.UserTier", b =>
                {
                    b.HasOne("ApiMonetizationGateway.Shared.Models.Tier", "Tier")
                        .WithMany()
                        .HasForeignKey("TierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiMonetizationGateway.Shared.Models.User", "User")
                        .WithMany("UserTiers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.Tier", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Shared.Models.User", b =>
                {
                    b.Navigation("ApiUsages");

                    b.Navigation("MonthlyUsageSummaries");

                    b.Navigation("UserTiers");
                });
#pragma warning restore 612, 618
        }
    }
}
